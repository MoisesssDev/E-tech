package com.spring.backend.config;

import java.util.Arrays;

import org.hibernate.cfg.Environment;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration;

@Configuration
public class SecurityConfig extends WebSecurityConfiguration{

//	@Bean
//	SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
//		http.csrf(csrf -> csrf.disable());
//		http.authorizeHttpRequests(auth -> auth.anyRequest().permitAll());
//		return http.build();
//		
//	}
    
	@Autowired
    private Environment environment;

    @Override
    protected void configure(HttpSecurity http) throws Exception {
        if (Arrays.asList(environment.getActiveProfiles()).contains("dev")) {
            http.authorizeRequests()
                .antMatchers("/h2-console/**").permitAll()
                .anyRequest().authenticated()
                .and()
                .headers().frameOptions().sameOrigin()  // Permitir que o console H2 seja exibido em um frame
                .and()
                .csrf().disable();  // Desabilitar CSRF para o console H2
        } else {
            http.authorizeRequests()
                .anyRequest().authenticated();
        }
    }
}
